server:
  port: 8090
  shutdown: graceful
spring:
  rabbitmq:
    host: 172.17.0.1
    port: 5672
    username: admin
    password: admin
  docker:
    compose:
      enabled: false
  config:
    import: "application-secret.yml"
  autoconfigure:
    exclude:
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: https://api.hoit.my/auth/google/redirect
  lifecycle:
    # 스프링부트가 종료 요청을 받은 후 기다려줄 수 있는 최대한의 시간d
    timeout-per-shutdown-phase: 1h
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://172.17.0.1:3306/midai
    username: root
  data:
    redis:
      host: 172.17.0.1
      port: 6379
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: false
        highlight_sql: false
        use_sql_comments: false
logging:
  level:
    com.ll.demo03: INFO
    org.hibernate.SQL: INFO
    org.hibernate.orm.jdbc.bind: INFO
    org.hibernate.orm.jdbc.extract: INFO
    org.springframework.transaction.interceptor: INFO
custom:
  webhook-url: https://api.hoit.my
  site:
    name: "My Site Prod"
management:
  endpoints:
    web:
      exposure:
        include: "health"  # /actuator/health 활성화
  endpoint:
    health:
      show-details: always  # 상태 확인 시 상세 정보 제공함